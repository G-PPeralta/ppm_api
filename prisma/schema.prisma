generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Atividade {
  id                           Int                            @id(map: "tb_atividades2_pkey") @default(autoincrement())
  nomeAtividade                String                         @map("nome_atividade") @db.VarChar(50)
  tipoAtividade                atividade                      @default(ENTREGA) @map("tipo_atividade")
  deletado                     Boolean                        @default(false)
  macroatividadeId             Int?                           @map("macroatividade_id")
  item                         String                         @db.VarChar(55)
  temporario                   Boolean?                       @default(false)
  macroatividade               Atividade?                     @relation("MacroatividadeAtividades", fields: [macroatividadeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_atividades_tb_atividades1")
  rl_tb_atividades_tb_projetos rl_tb_atividades_tb_projetos[] @relation("rl_tb_atividades_tb_projetosTotb_atividades")
  atividades                   Atividade[]                    @relation("MacroatividadeAtividades")

  @@map("tb_atividades")
}

model DesafiosProjetos {
  desafioId Int     @map("desafio_id")
  projetoId Int     @map("projeto_id")
  deletado  Boolean @default(false)
  desafio   Desafio @relation(fields: [desafioId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_desafios_has_tb_projetos_tb_desafios1")
  projeto   Projeto @relation(fields: [projetoId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_desafios_has_tb_projetos_tb_projetos1")

  @@id([desafioId, projetoId])
  @@map("rl_tb_desafios_tb_projetos")
}

model Desafio {
  id               Int                @id @default(autoincrement())
  observacoes      String             @db.VarChar(255)
  dataInicio       DateTime?          @map("data_inicio") @db.Date
  dataFim          DateTime           @map("data_fim") @db.Date
  deletado         Boolean            @default(false)
  desafiosProjetos DesafiosProjetos[]

  @@map("tb_desafios")
}

model ClassificacaoProjeto {
  id            Int       @id @default(autoincrement())
  classificacao String    @db.VarChar(45)
  deletado      Boolean   @default(false)
  projetos      Projeto[]

  @@map("tb_classificacoes_projetos")
}

model Complexidade {
  id           Int       @id @default(autoincrement())
  complexidade String    @db.VarChar(45)
  deletado     Boolean   @default(false)
  projetos     Projeto[]

  @@map("tb_complexidades")
}

model Demanda {
  id       Int       @id @default(autoincrement())
  demanda  String    @db.VarChar(45)
  deletado Boolean   @default(false)
  projetos Projeto[]

  @@map("tb_demandas")
}

model DivisaoProjeto {
  id       Int       @id @default(autoincrement())
  divisao  String    @db.VarChar(45)
  deletado Boolean   @default(false)
  projetos Projeto[]

  @@map("tb_divisoes_projetos")
}

model Gate {
  id       Int       @id @default(autoincrement())
  gate     String    @db.VarChar(45)
  deletado Boolean   @default(false)
  projetos Projeto[]

  @@map("tb_gates")
}

model Local {
  id       Int       @id @default(autoincrement())
  local    String    @db.VarChar(45)
  deletado Boolean   @default(false)
  projetos Projeto[]

  @@map("tb_locais")
}

model Log {
  id       Int      @id @default(autoincrement())
  log      Json     @db.Json
  data     DateTime @default(dbgenerated("timezone('gmt3'::text, now())")) @db.Timestamp(6)
  deletado Boolean  @default(false)

  @@map("tb_logs")
}

model Polo {
  id       Int       @id @default(autoincrement())
  polo     String    @db.VarChar(45)
  deletado Boolean   @default(false)
  projetos Projeto[]

  @@map("tb_polos")
}

model PrioridadeProjeto {
  id         Int       @id @default(autoincrement())
  prioridade String    @db.VarChar(45)
  deletado   Boolean   @default(false)
  projetos   Projeto[]

  @@map("tb_prioridades_projetos")
}

model Projeto {
  id                           Int                            @id @default(autoincrement())
  nomeProjeto                  String                         @map("nome_projeto") @db.VarChar(150)
  descricao                    String?                        @db.VarChar(512)
  justificativa                String?                        @db.VarChar(1024)
  valorTotalPrevisto           Decimal?                       @map("valor_total_previsto") @db.Decimal(22, 2)
  dataInicio                   DateTime?                      @map("data_inicio") @db.Date
  dataFim                      DateTime?                      @map("data_fim") @db.Date
  poloId                       Int                            @map("polo_id")
  localId                      Int                            @map("local_id")
  solicitanteId                Int?                           @map("solicitante_id")
  classificacaoId              Int?                           @map("classificacao_id")
  divisaoId                    Int?                           @map("divisao_id")
  gateId                       Int?                           @map("gate_id")
  tipoProjetoId                Int                            @map("tipo_projeto_id")
  demandaId                    Int?                           @map("demanda_id")
  statusId                     Int                            @map("status_id")
  prioridadeId                 Int?                           @map("prioridade_id")
  complexidadeId               Int?                           @map("complexidade_id")
  dataInicioReal               DateTime?                      @map("dataInicio_real") @db.Date
  dataFimReal                  DateTime?                      @map("dataFim_real") @db.Date
  comentarios                  String?                        @db.VarChar(255)
  deletado                     Boolean                        @default(false)
  item                         Int?
  numero                       Int?
  responsavel_id               Int?
  coordenador_id               Int?
  elemento_pep                 String?                        @db.VarChar
  classificacaoProjeto         ClassificacaoProjeto?          @relation(fields: [classificacaoId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_projetos_tb_classificacao_projetos1")
  complexidade                 Complexidade?                  @relation(fields: [complexidadeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_projetos_tb_complexidade1")
  demanda                      Demanda?                       @relation(fields: [demandaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_projetos_tb_demandas1")
  divisaoProjeto               DivisaoProjeto?                @relation(fields: [divisaoId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_projetos_tb_divis√£o_projetos1")
  gate                         Gate?                          @relation(fields: [gateId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_projetos_tb_gates1")
  local                        Local                          @relation(fields: [localId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_projetos_tb_locais1")
  polo                         Polo                           @relation(fields: [poloId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_projetos_tb_polos1")
  prioridadeProjeto            PrioridadeProjeto?             @relation(fields: [prioridadeId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_projetos_tb_prioridade_projeto1")
  solicitanteProjeto           SolicitanteProjeto?            @relation(fields: [solicitanteId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_projetos_tb_departamentos1")
  statusProjeto                StatusProjeto                  @relation(fields: [statusId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_projetos_tb_status_projeto1")
  tipoProjeto                  TipoProjeto                    @relation(fields: [tipoProjetoId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_tb_projetos_tb_tipos_projeto1")
  rl_tb_atividades_tb_projetos rl_tb_atividades_tb_projetos[] @relation("rl_tb_atividades_tb_projetosTotb_projetos")
  desafiosProjetos             DesafiosProjetos[]

  @@map("tb_projetos")
}

model Role {
  id       Int     @id @default(autoincrement())
  role     String  @db.VarChar
  nomeRole String  @map("nome_role") @db.VarChar(50)
  deletado Boolean @default(false)
  usuarios User[]

  @@map("tb_roles")
}

model SolicitanteProjeto {
  id          Int       @id @default(autoincrement())
  solicitante String    @db.VarChar(45)
  deletado    Boolean   @default(false)
  projetos    Projeto[]

  @@map("tb_solicitantes_projetos")
}

model StatusAtividade {
  id                           Int                            @id @default(autoincrement())
  status                       String                         @db.VarChar(45)
  deletado                     Boolean                        @default(false)
  rl_tb_atividades_tb_projetos rl_tb_atividades_tb_projetos[] @relation("rl_tb_atividades_tb_projetosTotb_status_atividade")

  @@map("tb_status_atividade")
}

model StatusProjeto {
  id       Int       @id @default(autoincrement())
  status   String    @unique(map: "tb_status_projetos_un") @db.VarChar(45)
  deletado Boolean   @default(false)
  projetos Projeto[]

  @@map("tb_status_projetos")
}

model TipoProjeto {
  id       Int       @id @default(autoincrement())
  tipo     String    @db.VarChar(45)
  deletado Boolean   @default(false)
  obs      String?
  projetos Projeto[]

  @@map("tb_tipos_projeto")
}

model User {
  id                           Int                            @id @default(autoincrement())
  nome                         String                         @db.VarChar
  email                        String                         @unique @db.VarChar
  senha                        String                         @db.VarChar
  telefone                     String                         @db.VarChar
  areaAtuacao                  String                         @map("area_atuacao") @db.VarChar
  roleId                       Int                            @default(2) @map("role_id")
  deletado                     Boolean                        @default(false)
  role                         Role                           @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "role_id_fk")
  rl_tb_atividades_tb_projetos rl_tb_atividades_tb_projetos[] @relation("rl_tb_atividades_tb_projetosTotb_usuarios")

  @@map("tb_usuarios")
}

model rl_tb_atividades_tb_projetos {
  id                    Int             @id @default(autoincrement())
  projeto_id            Int
  atividade_id          Int
  data_inicio           DateTime        @db.Date
  data_fim              DateTime        @db.Date
  data_conclusao        DateTime?       @db.Date
  status_id             Int
  data_restricao_inicio DateTime?       @db.Date
  data_restricao_depois DateTime?       @db.Date
  responsavel_id        Int?
  deletado              Boolean         @default(false)
  predecessor           Int?
  tb_atividades         Atividade       @relation("rl_tb_atividades_tb_projetosTotb_atividades", fields: [atividade_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_projetos           Projeto         @relation("rl_tb_atividades_tb_projetosTotb_projetos", fields: [projeto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_usuarios           User?           @relation("rl_tb_atividades_tb_projetosTotb_usuarios", fields: [responsavel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tb_status_atividade   StatusAtividade @relation("rl_tb_atividades_tb_projetosTotb_status_atividade", fields: [status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model AreaAtuacao {
  id       Int      @id(map: "tb_tipos_usuario_pkey") @default(autoincrement())
  tipo     String?  @db.VarChar(255)
  deletado Boolean? @default(false)

  atividades AtividadeIntervencao[]


  @@map("tb_areas_atuacoes")
}

model Responsavel {
  responsavel_id  Int     @id(map: "tb_responsaveis_pk") @default(autoincrement())
  nomeResponsavel String? @map("nome_responsavel") @db.VarChar(255)

  atividades AtividadeIntervencao[]

  @@map("tb_responsaveis")
}

model tb_tipo_valor_projeto {
  id         Int    @id(map: "tb_tipo_valor_projeto_pk") @default(autoincrement())
  tipo_valor String @db.VarChar(255)
}

model tb_valores_projeto {
  id             Int      @id @default(autoincrement())
  id_projeto     Int
  valor          Decimal  @db.Decimal(22, 2)
  tipo_valor_id  Int
  data_inclusao  DateTime @db.Timestamp(6)
  conta_contabil String?  @db.VarChar(50)
  classificacao  String?  @db.VarChar(50)
  aderencia      String?  @db.VarChar(50)
  evidencia      String?  @db.VarChar(50)
  obs            String?  @db.VarChar(50)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model Coordenador {
  id_coordenador  Int    @id @default(autoincrement())
  coordenadorNome String @map("coordenador_nome") @db.VarChar(255)

  @@map("tb_coordenadores")
}

model Campanhas {
  id                  Int       @id(map: "tb_campanhas_pk") @default(autoincrement())
  responsavel         String?   @db.VarChar(60)
  area                String?   @db.VarChar(25)
  spt                 String?   @db.VarChar(15)
  poco                String?   @db.VarChar(15)
  tarefa              String?   @db.VarChar(100)
  old_id              Int?
  fase                String?   @db.VarChar(15)
  porcentagem         Int?
  status              String?   @db.VarChar(20)
  campanha            String?   @db.Char(2)
  ordem               Int?
  sucessores_diretos  Int?
  inicio_planejado    DateTime? @db.Date
  fim_planejado       DateTime? @db.Date
  duracao_real        Int?
  inicio_real         DateTime? @db.Date
  fim_real            DateTime? @db.Date
  duracao_planejada   Int?
  precedentes_diretos String?   @db.VarChar(55)
  atualizacao_cip     DateTime? @db.Date

  @@map("tb_campanhas")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model tb_pocos_sondas {
  poco               String? @db.VarChar(50)
  sonda              String? @db.VarChar(50)
  id_tb_pocos_sondas Int     @default(autoincrement())

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model tb2_projetos2 {
  item                 String?   @db.VarChar(32767)
  previsto             String?   @db.VarChar(32767)
  status_id            Int?
  numero               String?   @db.VarChar(32767)
  nome                 String?   @db.VarChar(32767)
  polo_id              Int?
  local_id             Int?
  descricao            String?   @db.VarChar(32767)
  justificativa        String?   @db.VarChar(32767)
  valor_previsto_2022  String?   @db.VarChar(32767)
  valor_previsto_2023  String?   @db.VarChar(32767)
  valor_total_previsto String?   @db.VarChar(32767)
  solicitante_id       String?   @db.VarChar(45)
  classificacao_id     Int?
  divisao_id           Int?
  pipefy               String?   @db.VarChar(32767)
  gate_id              Int?
  tipo_id              Int?
  demanda_id           Int?
  prioridade_id        Int?
  complexidade_id      Int?
  responsavel          String?   @db.VarChar(32767)
  cordenador           String?   @db.VarChar(32767)
  InicioPrevisto       DateTime? @db.Date
  FimPrevisto          DateTime? @db.Date
  Comentarios          String?   @db.VarChar(32767)

  @@ignore
}

model Intervencao {
  id              Int       @id(map: "tb_intervencoes_pk") @default(autoincrement())
  spt             String?   @db.VarChar(50)
  poco            String?   @db.VarChar(50)
  camp            String?   @db.VarChar(100)
  sequencia       String?   @db.VarChar(100)
  inicioPlanejado DateTime? @map("inicio_planejado") @db.Date
  observacoes     String?   @db.VarChar(32767)

  tipoProjetoId Int                @map("intervencoes_tipo_id")
  tipoProjeto   ProjetoIntervencao @relation(fields: [tipoProjetoId], references: [id])


  @@map("tb_intervencoes")
}

model Tarefa {
  id     Int    @id @default(autoincrement())
  tarefa String @db.VarChar(100)

  atividades AtividadeIntervencao[]

  @@map("tb_intervencoes_tarefas")
}

model PrecedentesAtividade {

  atividadeAtualId      Int @map("atividade_atual_id")
  atividatePrecedenteId Int @map("atividate_precedente_id")
  orderm                Int

  atividadeAtual      AtividadeIntervencao @relation(name: "sequente", fields: [atividadeAtualId], references: [id])
  atividadePrecedente AtividadeIntervencao @relation(name: "Precedente", fields: [atividatePrecedenteId], references: [id])



  @@id([atividadeAtualId, atividatePrecedenteId])
  @@map("tb_intervencoes_atividades_precedentes")
}

model AtividadeIntervencao {
  id               Int       @id @default(autoincrement())
  naoInciarAntes   DateTime? @db.Date
  naoTerminarAntes DateTime? @db.Date
  prioridade       Boolean?  @db.Boolean
  obs              String    @db.VarChar(191)

  responsavelId Int @map("responsavel_id")
  tarefaId      Int @map("tarefa_id")
  areaAtuacaoId Int @map("area_atuacao_id")

  tarefa      Tarefa?      @relation(fields: [tarefaId], references: [id])
  responsavel Responsavel? @relation(fields: [responsavelId], references: [responsavel_id])
  area        AreaAtuacao? @relation(fields: [areaAtuacaoId], references: [id])

  precedentes PrecedentesAtividade[] @relation("Precedente")
  sequentes   PrecedentesAtividade[] @relation("sequente")

  projetos ProjetoAtividades[]
  @@map("tb_intervencoes_atividades")
}

model ProjetoAtividades {

  projetoId   Int @map("projeto_id")
  atividadeId Int @map("atividade_id")

  ordem Int

  projeto   ProjetoIntervencao   @relation(fields: [projetoId], references: [id])
  atividade AtividadeIntervencao @relation(fields: [atividadeId], references: [id])

  @@id([projetoId, atividadeId])
  @@map("tb_intervencoes_tipo_atividades")
}

model ProjetoIntervencao {
  id   Int    @id @default(autoincrement())
  nome String @db.VarChar(100)
  obs  String @db.VarChar(100)

  atividades   ProjetoAtividades[]
  intervencoes Intervencao[]

  @@map("tb_intervencoes_tipo")
}

enum atividade {
  ENTREGA
  ACAO
}
